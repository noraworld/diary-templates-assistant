name: Issue Changer

on:
  # It is fine to perform it manually. Because it is idempotent, it does nothing if the diary is already created.
  workflow_dispatch:
  # 8:00 AM (JST) every day
  schedule:
    - cron: '0 23 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Change issues
        # Note that the timezone is UTC.
        run: |
          if [ "$(gh issue list --repo "noraworld/diary-templates" | wc -l)" -ne 0 ]; then
            echo "Some of or all of the diary templates have not been closed yet." >&2
            exit 1
          fi

          ISSUE_TEMPLATE=".github/ISSUE_TEMPLATE/general.md"
          ISSUE_TITLE_LIST=$(gh issue list --json title --jq .[].title)

          title=$(grep "title: " "$ISSUE_TEMPLATE"                              |
                  sed -e 's/^title: //g'                                        |
                  sed -e "s/[\"\']//g"                                          |
                  sed -e "s/\[{{DATE}}\]/$(date '+%Y-%m-%d' --date '1 day')/g")

          if [ "$(echo "$ISSUE_TITLE_LIST" | grep -c "$title")" -ne 0 ]; then
            echo "It will be skipped because \"$title\" already exists." >&2
            exit 1
          fi

          body=$(sed -e '/^---$/,/^---$/d' "$ISSUE_TEMPLATE")

          TO_DO=$(gh issue list                                                                         \
                  --repo noraworld/to-do                                                                \
                  --search "label:today,tomorrow"                                                       \
                  --json title,url                                                                      \
                  --template '{{range.}}* [ ] [{{.title}}]({{.url}}){{"\r\n"}}{{end}}{{"\r\n"}}' | tac)

          processed_body="$body"
          if [ "$(echo "$TO_DO" | tr -d "\n" | tr -d "\r" | tr -d "\r\n")" != "" ]; then
            processed_body=$(echo "$processed_body" | sed -E 's/\* 特になし//g')
            processed_body="$processed_body$TO_DO"
          fi

          assignee=$(grep "assignees: " "$ISSUE_TEMPLATE" |
                     sed -e 's/^assignees: //g'           |
                     sed -e "s/[\"\']//g")

          url=$(gh issue create            \
                  --title "$title"         \
                  --body "$processed_body" \
                  --assignee "$assignee")

          gh issue list --search $(date '+%Y-%m-%d') | awk '{ print $1 }' | xargs -I {} gh issue close {}
        shell: sh
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
