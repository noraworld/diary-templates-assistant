name: Templates Creator

on:
  workflow_call:
    inputs:
      main_repo:
        required: true
        type: string
      template_repo:
        required: true
        type: string
      issue_template_repo:
        required: true
        type: string
      timezone:
        required: true
        type: string
    secrets:
      token:
        required: true
  workflow_dispatch:
    inputs:
      main_repo:
        required: true
        type: string
      template_repo:
        required: true
        type: string
      issue_template_repo:
        required: true
        type: string
      timezone:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.issue_template_repo }}
          ref: main
          token: ${{ secrets.token }}
          path: tmp

      - name: Create issues from templates
        run: |
          DIARY_ISSUE_NUMBER=$(gh issue list --repo "$MAIN_REPO" --limit 1 | awk '{ print $1 }')
          diary_issue_title=$(gh issue view --repo "$MAIN_REPO" --json title --jq .title "$DIARY_ISSUE_NUMBER")
          diary_issue_body=$(gh issue view --repo "$MAIN_REPO" --json body --jq .body "$DIARY_ISSUE_NUMBER")
          ISSUE_TITLE_LIST=$(gh issue list --repo "$TEMPLATE_REPO" --json title --jq .[].title)

          if [ "$diary_issue_title" != "$(date '+%Y-%m-%d' --date '0 day')" ]; then
            echo "DEBUG: diary issue title: $diary_issue_title" >&2
            echo "DEBUG: today's date:      $(date '+%Y-%m-%d' --date '0 day')" >&2
            echo "The diary issue title does not match today's date." >&2
            exit 1
          fi

          find tmp/.github/ISSUE_TEMPLATE -type f | while read -r issue_template; do
            raw_number=$(grep -m1 '^name:' "$issue_template" | sed -E 's/^name:[[:space:]]*([0-9]+)\..*/\1/')
            number=$((10#$raw_number))
            printf "%03d %s\n" "$number" "$issue_template"
          done | sort -nr | while read -r number issue_template; do
            title=$(grep "title: " "$issue_template"                              |
                    sed -e 's/^title: //g'                                        |
                    sed -e "s/[\"\']//g"                                          |
                    sed -e "s/\[{{DATE}}\]/$(date '+%Y-%m-%d' --date '0 day')/g")

            if [ "$(echo "$ISSUE_TITLE_LIST" | grep -c "$title")" -ne 0 ]; then
              echo "It will be skipped because \"$title\" already exists." >&2
              continue
            fi

            body=$(sed -e '/^---$/,/^---$/d' "$issue_template")

            assignee=$(grep "assignees: " "$issue_template" |
                       sed -e 's/^assignees: //g'           |
                       sed -e "s/[\"\']//g")

            label=$(grep "labels: " "$issue_template" |
                    sed -e 's/^labels: //g'           |
                    sed -e "s/[\"\']//g")

            url=$(gh issue create           \
                    --repo "$TEMPLATE_REPO" \
                    --title "$title"        \
                    --body "$body"          \
                    --assignee "$assignee"  \
                    --label "$label")

            display_name=$(echo "$title" | cut -d '_' -f4)
            # https://chat.openai.com/share/0bb3dd50-70bb-4c09-8396-1f53824c3962
            escaped_url=$(echo "$url" | sed 's/[\^\$\.\/]/\\&/g')
            diary_issue_body=$(echo "$diary_issue_body" | sed -E "s/$display_name/\[$display_name\]\($escaped_url\)/g")

            # https://github.com/noraworld/diary-templates/actions/runs/12000592518/job/33477428100
            # https://syossan.hateblo.jp/entry/2022/12/24/124141
            sleep 2
          done

          gh issue edit --repo "$MAIN_REPO" --body "$diary_issue_body" "$DIARY_ISSUE_NUMBER"
        shell: sh
        env:
          GH_TOKEN: ${{ secrets.token }}
          MAIN_REPO: ${{ inputs.main_repo }}
          TEMPLATE_REPO: ${{ inputs.template_repo }}
          TZ: ${{ inputs.timezone }}
