name: Issue Recorder

on:
  issues:
    types:
      - labeled

jobs:
  setup:
    if: github.event.issue.state == 'open' && github.event.label.name == 'system:done'
    runs-on: ubuntu-latest
    outputs:
      year: ${{ steps.year.outputs.year }}
      month: ${{ steps.month.outputs.month }}
      day: ${{ steps.day.outputs.day }}
      slug: ${{ steps.slug.outputs.slug }}
      title: ${{ steps.title.outputs.title }}
      published: ${{ steps.published.outputs.published }}
      link_only: ${{ steps.link_only.outputs.link_only }}
      mode: ${{ steps.mode.outputs.mode }}
    steps:
      - name: Check if title is valid
        run: |
          if [ "$(
            echo "${{ github.event.issue.title }}" |
            grep -cE '^([0-9]{4}-[0-9]{2}-[0-9]{2})_([A-Za-z0-9]+(-[A-Za-z0-9]+)*)_([^_]+)$'
          )" -eq 0 ]; then
            echo "ERROR: title format is invalid" >&2
            gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --remove-label "system:done"
            exit 1
          fi

      # "2025-06-16_start-blog_„Éñ„É≠„Ç∞„ÅØ„Åò„ÇÅ„Åæ„Åó„Åü" => "2025"
      - name: Get year
        id: year
        run: |
          YEAR=$(awk -F '[-_]' '{print $1}' <<< "${{ github.event.issue.title }}")
          if [ "$YEAR" = "" ] || [ "$(echo "$YEAR" | grep -cE '^[0-9]{4}$')" -eq 0 ]; then
            echo "ERROR: YEAR is empty or invalid" >&2
            gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --remove-label "system:done"
            exit 1
          else
            echo "year=$YEAR" >> $GITHUB_OUTPUT
          fi
      # "2025-06-16_start-blog_„Éñ„É≠„Ç∞„ÅØ„Åò„ÇÅ„Åæ„Åó„Åü" => "06"
      - name: Get month
        id: month
        run: |
          MONTH=$(awk -F '[-_]' '{print $2}' <<< "${{ github.event.issue.title }}")
          if [ "$MONTH" = "" ] || [ "$(echo "$MONTH" | grep -cE '^[0-9]{2}$')" -eq 0 ]; then
            echo "ERROR: MONTH is empty or invalid" >&2
            gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --remove-label "system:done"
            exit 1
          else
            echo "month=$MONTH" >> $GITHUB_OUTPUT
          fi
      # "2025-06-16_start-blog_„Éñ„É≠„Ç∞„ÅØ„Åò„ÇÅ„Åæ„Åó„Åü" => "16"
      - name: Get day
        id: day
        run: |
          DAY=$(awk -F '[-_]' '{print $3}' <<< "${{ github.event.issue.title }}")
          if [ "$DAY" = "" ] || [ "$(echo "$DAY" | grep -cE '^[0-9]{2}$')" -eq 0 ]; then
            echo "ERROR: DAY is empty or invalid" >&2
            gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --remove-label "system:done"
            exit 1
          else
            echo "day=$DAY" >> $GITHUB_OUTPUT
          fi
      # "2025-06-16_start-blog_„Éñ„É≠„Ç∞„ÅØ„Åò„ÇÅ„Åæ„Åó„Åü" => "start-blog"
      - name: Get slug
        id: slug
        run: |
          SLUG=$(cut -d '_' -f2 <<< "${{ github.event.issue.title }}")
          if [ "$SLUG" = "" ] || [ "$(echo "$SLUG" | grep -cE '^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$')" -eq 0 ]; then
            echo "ERROR: SLUG is empty or invalid" >&2
            gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --remove-label "system:done"
            exit 1
          else
            echo "slug=$SLUG" >> $GITHUB_OUTPUT
          fi
      # "2025-06-16_start-blog_„Éñ„É≠„Ç∞„ÅØ„Åò„ÇÅ„Åæ„Åó„Åü" => "„Éñ„É≠„Ç∞„ÅØ„Åò„ÇÅ„Åæ„Åó„Åü"
      - name: Get title
        id: title
        run: |
          TITLE=$(cut -d '_' -f3 <<< "${{ github.event.issue.title }}")
          if [ "$TITLE" = "" ] || [ "$(echo "$TITLE" | grep -cE '^[^_]+$')" -eq 0 ]; then
            echo "ERROR: TITLE is empty or invalid" >&2
            gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --remove-label "system:done"
            exit 1
          else
            echo "title=$TITLE" >> $GITHUB_OUTPUT
          fi

      - name: Check if initial release or update
        id: published
        run: |
          if [ "$(echo "${{ toJson(github.event.issue.labels.*.name) }}" | grep -c "system:published")" -gt 0 ]; then
            echo "published=true" >> $GITHUB_OUTPUT
          else
            echo "published=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if posting to diary is enabled or disabled
        id: link_only
        run: |
          if [ "$(echo "${{ toJson(github.event.issue.labels.*.name) }}" | grep -c "system:link-only")" -gt 0 ]; then
            echo "link_only=true" >> $GITHUB_OUTPUT
          else
            echo "link_only=false" >> $GITHUB_OUTPUT
          fi

      - name: Decide whether to save to diary issue
        id: mode
        run: |
          # https://zenn.dev/link/comments/ac4003f2728de7
          # https://stackoverflow.com/questions/59588605/how-to-check-for-a-label-in-a-github-action-condition#answer-59588725
          if [ "${{ steps.link_only.outputs.link_only }}" = "true" ] || [ "${{ steps.published.outputs.published }}" = "true" ]; then
            echo "mode=file" >> $GITHUB_OUTPUT
          else
            echo "mode=file, issue" >> $GITHUB_OUTPUT
          fi

      - name: Delete system labels
        run: |
          # These labels should be removed because the label information is used as the tag information as well.
          SYSTEM_LABELS="system:done,system:link-only,system:published"
          gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --remove-label "$SYSTEM_LABELS"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  publish:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Issue Recorder
        uses: noraworld/issue-recorder@main
        with:
          mode: ${{ env.MODE }}
          filepath: _posts/${{ env.YEAR }}/${{ env.MONTH }}/${{ env.YEAR }}-${{ env.MONTH }}-${{ env.DAY }}-${{ env.SLUG }}.md
          committer_name: Kosuke Aoki
          committer_email: mail@noraworld.com
          overwrite_when_modified: true
          notification_comment: "[`<FILE_PATH>`](<FILE_URL_WITH_SHA>) ([<REF_NAME>](<FILE_URL>))"
          target_file_repo: noraworld/blog
          target_issue_repo: noraworld/reserved-diary
          target_issue_number: latest
          partial_content_target_issue_repo: noraworld/private-diary
          partial_content_target_issue_number: latest
          partial_content_start_string: "(<span dir=\"auto\">{private}|<div dir=\"auto\"><p>{private})"
          partial_content_end_string: "({/private}</span>|{/private}</div>)"
          with_repo_assets: ${{ env.MODE }}
          assets_repo: noraworld/box-ivysaur
          assets_directory: ${{ env.YEAR }}/${{ env.MONTH }}/${{ env.DAY }}
          with_assets_compression: true
          compression_threshold: 1048576
          resize_width: 1920
          with_compatible_format: true
          title_prefix_for_issue: ü™∂
          with_date: ""
          timezone: Asia/Tokyo
          time_format: "yyyy-MM-dd HH:mm:ss ZZ"
          with_header: "---\r\nlayout: post\r\nnumber: <NUMBER>\r\ntitle: <TITLE>\r\nauthor: <ASSIGNEES>\r\ndescription: <TITLE>\r\ndate: <CREATED_AT>\r\ntags: <LABELS>\r\npublished: true\r\n---"
          with_title: "issue"
          custom_title: ${{ env.TITLE }}
          with_quote: ""
          with_hr: ""
          personal_access_token: GH_TOKEN
        env:
          YEAR: ${{ needs.setup.outputs.year }}
          MONTH: ${{ needs.setup.outputs.month }}
          DAY: ${{ needs.setup.outputs.day }}
          SLUG: ${{ needs.setup.outputs.slug }}
          TITLE: ${{ needs.setup.outputs.title }}
          MODE: ${{ needs.setup.outputs.mode }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Share blog link with diary issue
        run: |
          DIARY_ISSUE_NUMBER=$(gh issue list --repo "noraworld/reserved-diary" --limit 1 | awk '{ print $1 }')

          if [ "${{ env.PUBLISHED }}" = "true" ]; then
            DIARY_NOTIFY_WORDING="„Éñ„É≠„Ç∞Êõ¥Êñ∞„Åó„Åü„ÄÇ"
          else
            DIARY_NOTIFY_WORDING="„Éñ„É≠„Ç∞Êõ∏„ÅÑ„Åü„ÄÇ"
          fi

          ##### DO NOT DELETE THE NEWLINE!! #####
          DIARY_NOTIFY_BODY="$DIARY_NOTIFY_WORDING

          [${{ env.TITLE }}](https://noraworld.github.io/blog/${{ env.SLUG }})"
          ##### DO NOT DELETE THE NEWLINE!! #####

          gh issue comment --repo "noraworld/reserved-diary" $DIARY_ISSUE_NUMBER --body "$DIARY_NOTIFY_BODY"
        env:
          SLUG: ${{ needs.setup.outputs.slug }}
          TITLE: ${{ needs.setup.outputs.title }}
          PUBLISHED: ${{ needs.setup.outputs.published }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Close issue
        run: gh issue close --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Restore labels
        run: |
          gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --add-label "system:published"
          if [ "${{ env.LINK_ONLY }}" = "true" ]; then
            gh issue edit --repo "$GITHUB_REPOSITORY" ${{ github.event.issue.number }} --add-label "system:link-only"
          fi
        env:
          LINK_ONLY: ${{ needs.setup.outputs.link_only }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
